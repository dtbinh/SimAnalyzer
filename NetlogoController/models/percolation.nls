;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Systematic Percolation ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to Percolate-From-Each-Node
  rebuilt-network-cities
  set g-Global? true
  set g-map-percolation? false
  ask cities [set tagged 0 set Time-Needed-to-reach-all-nodes 0]
  repeat count cities
  [
    reset-ticks
    ask cities
    [
      become-susceptible
      set outbreak-node 0
      set Time-Needed-to-reach-node 0 
    ]
    let outbreak-city one-of cities with [tagged = 0]
    if is-agent? outbreak-city
    [
     
      ask outbreak-city
      [ 
        set outbreak-node 1
        become-infected 
        set tagged 1
      ]
      while [not all? cities [infected?]]
      [ 
        spread-virus
        tick
      ]
      ask outbreak-city
       [
         set Time-Needed-to-reach-all-nodes ticks + 1
         ]  ;;Stores time (# ticks) needed to diffuse completely from the outbreak nodes to each outbreak node
    ]
  ]
  ask cities [set outbreak-node 0
              calcul-percolation-index]
  
  map-percolation
  graph-percolation
  ask cities [ask my-links [die]]
end


to become-infected  ;; city procedure
  set infected? true
  set color red
end

to become-susceptible  ;; city procedure
  set infected? false
  set color green
end

to spread-virus
  ask cities with [infected?]
    [ ask link-neighbors with [not infected?]
      [ if random-float 100 < virus-spread-chance
          [ 
              become-infected
              set Time-Needed-to-reach-node ticks + 1
          ] 
      ] 
    ]
end


to calcul-percolation-index
  set percolation-index Time-Needed-to-reach-all-nodes
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;re-built network between cities
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to rebuilt-network-cities
 ; l� ce qu'on cherhe � faire c'est de creer des links entre les cities dont les march�s sont connect�s...!!!!
 ask get-specific-market [ ask [where-is-house] of self [create-links-with connected-markets-houses myself]]

end

to-report connected-markets-houses [market-asking]
  let c-house-market nobody
  ask market-asking [ set c-house-market [where-is-house] of link-neighbors ]
  report turtle-set c-house-market
end





;;;;;;;;;;;;;;;
;;graphisme
;;;;;;;;;;;;;;;


to map-percolation
  ifelse g-map-percolation?
  [ask cities [ifelse outbreak-node = 1 
      [set color green] 
      [set color red]]
    set g-map-percolation? false ]
  [
    ifelse g-Global?
    [
      if max [Time-Needed-to-reach-all-nodes] of cities > 0
      [ask cities 
        [ifelse outbreak-node = 1 
          [set color green]
          [set color scale-color red  Time-Needed-to-reach-all-nodes min [Time-Needed-to-reach-all-nodes] of cities max [Time-Needed-to-reach-all-nodes] of cities]
        ]
      ]
    ]
    [
      if max [Time-Needed-to-reach-node] of cities > 0
      [ask cities 
        [ifelse outbreak-node = 1 
          [set color green]
          [set color scale-color red  Time-Needed-to-reach-node min [Time-Needed-to-reach-node] of cities max [Time-Needed-to-reach-node] of cities]
        ]
      ]
    ]
    
  set g-map-percolation? true]
end


to graph-percolation
  
    set-current-plot "Histo-Network"
   ; set-histogram-num-bars (max [percolation-index] of cities - min [percolation-index] of cities)
    set-plot-x-range (min [percolation-index] of cities) (max [percolation-index] of cities)
    histogram [percolation-index] of cities
end





